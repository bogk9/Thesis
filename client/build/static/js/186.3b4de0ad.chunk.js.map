{"version":3,"file":"static/js/186.3b4de0ad.chunk.js","mappings":"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","sources":["components/subcomponents/ChatBox/ChatBox.styles.jsx","components/subcomponents/ChatBox/ChatBox.jsx"],"sourcesContent":["import { Box, Button, styled, Typography } from '@mui/material';\n\nexport const HeaderWrapper = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\n\nexport const HeaderText = styled(Typography)({\n  fontSize: 25,\n  fontWeight: 500\n});\n\nexport const FeatureContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  flex: '1',\n  flexDirection: 'column',\n  backgroundColor: theme.palette.neutral.light,\n  padding: theme.spacing(2),\n  borderRadius: theme.spacing(2),\n  marginTop: theme.spacing(2)\n}));\n\nexport const ChatBoxContainer = styled(Box)(({ theme }) => ({\n  marginTop: theme.spacing(2),\n  backgroundColor: theme.palette.neutral.light,\n  borderRadius: '1rem',\n  display: 'grid',\n  gridTemplateRows: '10vh 60vh 13vh'\n}));\n\nexport const HeaderContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  padding: theme.spacing(2),\n  alignItems: 'center',\n  gap: theme.spacing(1)\n}));\n\nexport const ChatsContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '0.5rem',\n  padding: '1.5rem',\n  overflow: 'scroll'\n}));\n\nexport const SenderContainer = styled(Box)(({ theme }) => ({\n  background: theme.palette.neutral.light,\n  display: 'flex',\n  justifyContent: 'space-between',\n  height: '3.5rem',\n  alignItems: 'center',\n  gap: '1rem',\n  padding: '0.8rem',\n  bordeRadius: '1rem',\n  alignSelf: 'end'\n}));\n\nexport const Message = styled(Box)(({ theme, own }) => ({\n  background: own ? 'lightblue' : 'green',\n  alignSelf: own ? 'flex-end' : 'flex-start',\n  borderRadius: own ? '1rem 1rem 0 1rem' : '1rem 1rem 1rem 0',\n  color: 'white',\n  padding: '0.7rem',\n  maxWidth: '28rem',\n  width: 'fit-content',\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '0.5rem'\n}));\n\nexport const SendButton = styled(Button)(({ theme }) => ({\n  borderRadius: theme.spacing(4),\n  backgroundColor: '#8361e8',\n  marginLeft: theme.spacing(2),\n  width: '30%'\n}));\n","import React, { useEffect, useState } from 'react';\nimport { useRef } from 'react';\nimport { format } from 'timeago.js';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { getConversationMessages, sendMessage } from '../../../redux/actions/messages';\nimport {\n  ChatBoxContainer,\n  ChatsContainer,\n  HeaderContainer,\n  Message,\n  SendButton,\n  SenderContainer\n} from './ChatBox.styles';\nimport { Typography } from '@mui/material';\nconst InputEmoji = React.lazy(() => import('react-input-emoji'));\n\nconst ChatBox = ({ ...props }) => {\n  const dispatch = useDispatch();\n  const { conversationId } = useParams();\n  const user = useSelector((state) => state.auth.user);\n  const currentWorkgroup = useSelector((state) => state.workgroups.currentWorkgroup);\n  const conversation = useSelector((state) =>\n    state.messages?.conversations.find((conv) => conv._id == conversationId)\n  );\n  const [newMessage, setNewMessage] = useState('');\n  const scroll = useRef();\n\n  const handleChange = (newMessage) => {\n    setNewMessage(newMessage);\n  };\n\n  useEffect(() => {\n    if (conversation) dispatch(getConversationMessages(conversationId, user.token));\n  }, [conversationId, user]);\n\n  useEffect(() => {\n    scroll.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [conversation?.messages]);\n\n  const handleSend = async (e) => {\n    e.preventDefault();\n    const receiverId = conversation.members.find((id) => id !== user._id);\n    const message = {\n      senderId: user._id,\n      text: newMessage,\n      conversationId,\n      receiverId: receiverId\n    };\n\n    dispatch(sendMessage(message, user.token)).then(() => setNewMessage(''));\n  };\n  return (\n    <>\n      <React.Suspense fallback={<div>Just a moment...</div>}>\n        <ChatBoxContainer key={conversationId}>\n          {conversation ? (\n            <>\n              <HeaderContainer>\n                <Typography fontSize={22} color=\"text.primary\">\n                  {\n                    currentWorkgroup?.members?.find(\n                      (member) => member._id == conversation.members.find((cm) => cm !== user._id)\n                    )?.name\n                  }\n                </Typography>\n              </HeaderContainer>\n              <ChatsContainer>\n                {conversation?.messages?.map((message) => (\n                  <>\n                    <Message ref={scroll} own={message.senderId === user._id}>\n                      <Typography>{message.text}</Typography>{' '}\n                      <Typography>{format(message.createdAt)}</Typography>\n                    </Message>\n                  </>\n                ))}\n              </ChatsContainer>\n              <SenderContainer>\n                <InputEmoji value={newMessage} onChange={handleChange} />\n                <SendButton variant=\"contained\" onClick={handleSend}>\n                  Send\n                </SendButton>\n              </SenderContainer>{' '}\n            </>\n          ) : (\n            <span className=\"chatbox-empty-message\">Tap on a chat to start conversation...</span>\n          )}\n        </ChatBoxContainer>\n      </React.Suspense>\n    </>\n  );\n};\n\nexport default ChatBox;\n"],"names":["ChatBoxContainer","styled","Box","theme","display","justifyContent","Typography","fontSize","fontWeight","flex","flexDirection","backgroundColor","palette","neutral","light","padding","spacing","borderRadius","marginTop","gridTemplateRows","HeaderContainer","alignItems","gap","ChatsContainer","overflow","SenderContainer","background","height","bordeRadius","alignSelf","Message","own","color","maxWidth","width","SendButton","Button","marginLeft","InputEmoji","React","dispatch","useDispatch","conversationId","useParams","user","useSelector","state","auth","currentWorkgroup","workgroups","conversation","messages","conversations","find","conv","_id","useState","newMessage","setNewMessage","scroll","useRef","useEffect","getConversationMessages","token","current","scrollIntoView","behavior","handleSend","e","preventDefault","receiverId","members","id","message","senderId","text","sendMessage","then","fallback","member","cm","name","map","ref","format","createdAt","value","onChange","variant","onClick","className"],"sourceRoot":""}